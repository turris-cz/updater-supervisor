#!/bin/sh /etc/rc.common

# This script handles updater-ng immediate reboot recovery. After an immediate
# reboot there is going to be a journal and we should continue execution from it
# as soon as possible.

START=85
STOP=00

status() {
	return 0
}

start() {
	# Recover updater's journal if it exists
	if [ -e "/usr/share/updater/journal" ]; then
		# Note: supervisor runs pkgupdate that recovers run from journal and later
		# checks for update. This update is required because there could have been
		# replan planned after reboot and this ensures that we do replan as soon
		# as possible.
		updater-supervisor
	fi
}

stop() {
	# Block shutdown when update is running
	# We have to use Python3 as there seems to be no shell tool to simply use
	# POSIX file locks (lockf instead of flock)
	python3 - <<-EOF
		import fcntl
		f = open("/var/lock/opkg.lock", 'w')
		try:
		    fcntl.lockf(f, fcntl.LOCK_EX | fcntl.LOCK_NB)
		except BlockingIOError:
		    print("Waiting for opkg or updater to terminate...")
		    fcntl.lockf(f, fcntl.LOCK_EX)
		    print("Temination of updater/opkg detected, unblocking shutdown.")
		f.close()
	EOF
}

restart() {
	:
}

reload() {
	:
}
